a、O(n/k*k^2)=O(nk).这里的O中间有一横
b、n/k个列表两两合并，合并完继续合并，共lg(n/k)对，合并的代价O(n).所以O(nlg(n/k)).

         如果仅仅由两个字表合并，则每个数据被查找且移动一次，而n/k个字表时，每个数组查找且移动lg(n/k)次，

           故为O(nlg(n/k)).
c、O(nk+nlg(n/k))=O(nlgn).只能最大是k=O(lgn).等式左边中第一项是高阶项。k如果大于lgn,则比归并排序复杂度大了。左边可以写成nk+nlgn-nlgk，k等于lgn时，就是2nlgn-nlglgn.忽略恒定系数，则与归并排序是一样的。
d、 实践中，k的值应该选为使得插入排序比合并排序快的最大的数组长度。很容易理解，假设k=1，那么退化为标准合并排序，那么要提高效率需放大k，k放大到使得array[k]使用插入排序比合并排序快，而array[k+1]的插入排序效率不如或等于合并排序。